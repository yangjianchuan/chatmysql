<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="900" xmlns="http://www.w3.org/2000/svg">
    <!-- 样式定义 -->
    <defs>
        <style>
            .component { fill: #f0f8ff; stroke: #4682b4; stroke-width: 2; rx: 10; ry: 10; }
            .database { fill: #e6f2ff; stroke: #4682b4; stroke-width: 2; }
            .api { fill: #fff0f5; stroke: #ff69b4; stroke-width: 2; rx: 10; ry: 10; }
            .frontend { fill: #f5fffa; stroke: #3cb371; stroke-width: 2; rx: 10; ry: 10; }
            .module { fill: #fffaf0; stroke: #ffa500; stroke-width: 2; rx: 5; ry: 5; }
            .data-flow { fill: none; stroke: #708090; stroke-width: 2; marker-end: url(#arrowhead); }
            .data-flow-highlight { fill: none; stroke: #1e90ff; stroke-width: 2.5; marker-end: url(#arrowhead-highlight); }
            .text { font-family: Arial, sans-serif; font-size: 16px; fill: #333; text-anchor: middle; }
            .small-text { font-family: Arial, sans-serif; font-size: 12px; fill: #666; text-anchor: middle; }
            .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; fill: #333; text-anchor: middle; }
            .subtitle { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #555; text-anchor: middle; }
            .label { font-family: Arial, sans-serif; font-size: 14px; fill: #555; }
        </style>
        
        <!-- 箭头定义 -->
        <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#708090"/>
        </marker>
        <marker id="arrowhead-highlight" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
            <polygon points="0 0, 10 3.5, 0 7" fill="#1e90ff"/>
        </marker>
    </defs>

    <!-- 标题 -->
    <text x="600" y="40" class="title">ChatMySQL 系统架构图</text>

    <!-- 前端部分 -->
    <rect x="50" y="100" width="300" height="200" class="frontend"/>
    <text x="200" y="130" class="subtitle">前端 (Browser)</text>
    
    <!-- 前端模块 -->
    <rect x="80" y="160" width="240" height="40" class="module"/>
    <text x="200" y="185" class="text">HTML + JavaScript</text>
    
    <rect x="80" y="220" width="240" height="40" class="module"/>
    <text x="200" y="245" class="text">ECharts 5.4.3</text>

    <!-- 后端部分 -->
    <rect x="450" y="100" width="300" height="400" class="component"/>
    <text x="600" y="130" class="subtitle">后端 (Flask)</text>
    
    <!-- 后端模块 -->
    <rect x="480" y="160" width="240" height="40" class="module"/>
    <text x="600" y="185" class="text">Flask Web 服务器</text>
    
    <rect x="480" y="220" width="240" height="40" class="module"/>
    <text x="600" y="245" class="text">CORS 跨域支持</text>
    
    <rect x="480" y="280" width="240" height="40" class="module"/>
    <text x="600" y="305" class="text">SQL 查询处理</text>
    
    <rect x="480" y="340" width="240" height="40" class="module"/>
    <text x="600" y="365" class="text">结果格式化</text>
    
    <rect x="480" y="400" width="240" height="40" class="module"/>
    <text x="600" y="425" class="text">图表推荐</text>

    <!-- 数据库部分 -->
    <ellipse cx="600" cy="650" rx="150" ry="80" class="database"/>
    <text x="600" y="640" class="subtitle">MySQL 8.4.3</text>
    <text x="600" y="670" class="small-text">数据存储和查询</text>

    <!-- AI API 部分 -->
    <rect x="850" y="100" width="300" height="200" class="api"/>
    <text x="1000" y="130" class="subtitle">AI 模型 API</text>
    
    <!-- AI 模块 -->
    <rect x="880" y="160" width="240" height="40" class="module"/>
    <text x="1000" y="185" class="text">SQL 生成模型</text>
    
    <rect x="880" y="220" width="240" height="40" class="module"/>
    <text x="1000" y="245" class="text">结果总结模型</text>

    <!-- 配置文件部分 -->
    <rect x="850" y="350" width="300" height="200" class="component"/>
    <text x="1000" y="380" class="subtitle">配置和数据文件</text>
    
    <!-- 配置模块 -->
    <rect x="880" y="410" width="240" height="30" class="module"/>
    <text x="1000" y="430" class="text">.env 环境配置</text>
    
    <rect x="880" y="450" width="240" height="30" class="module"/>
    <text x="1000" y="470" class="text">databaseTableSchema.md</text>
    
    <rect x="880" y="490" width="240" height="30" class="module"/>
    <text x="1000" y="510" class="text">training_data.jsonl</text>

    <!-- 数据流连接 -->
    <!-- 前端到后端 -->
    <path d="M350 150 L450 150" class="data-flow"/>
    <text x="400" y="140" class="label">HTTP 请求</text>
    
    <path d="M450 200 L350 200" class="data-flow"/>
    <text x="400" y="220" class="label">HTTP 响应</text>

    <!-- 后端到数据库 -->
    <path d="M600 500 L600 570" class="data-flow"/>
    <text x="620" y="535" class="label">SQL 查询</text>
    
    <path d="M570 570 L570 500" class="data-flow"/>
    <text x="540" y="535" class="label">查询结果</text>

    <!-- 后端到 AI API -->
    <path d="M750 180 L850 180" class="data-flow-highlight"/>
    <text x="800" y="170" class="label">自然语言</text>
    
    <path d="M850 230 L750 230" class="data-flow-highlight"/>
    <text x="800" y="250" class="label">SQL/总结</text>

    <!-- 配置文件到后端 -->
    <path d="M880 450 L750 450" class="data-flow"/>
    <text x="815" y="440" class="label">加载配置</text>

    <!-- 数据流程说明 -->
    <rect x="50" y="750" width="1100" height="120" rx="10" ry="10" fill="#f9f9f9" stroke="#ddd" stroke-width="1"/>
    <text x="600" y="780" class="subtitle">系统数据流程</text>
    <text x="600" y="810" class="small-text">1. 用户在前端输入自然语言查询 → 2. 后端接收请求并调用 SQL 生成模型 → 3. 生成的 SQL 查询数据库</text>
    <text x="600" y="835" class="small-text">4. 数据库返回查询结果 → 5. 后端处理结果并调用总结模型 → 6. 返回格式化结果和图表推荐给前端</text>

    <!-- 技术栈标签 -->
    <rect x="50" y="350" width="300" height="150" rx="10" ry="10" fill="#f9f9f9" stroke="#ddd" stroke-width="1"/>
    <text x="200" y="380" class="subtitle">技术栈</text>
    <text x="200" y="410" class="small-text">后端: Python + Flask</text>
    <text x="200" y="435" class="small-text">数据库: MySQL 8.4.3</text>
    <text x="200" y="460" class="small-text">前端: HTML + JavaScript + ECharts</text>
    <text x="200" y="485" class="small-text">AI: 兼容 OpenAI 格式的 API (qwen2.5:32b)</text>
</svg>